<UserControl x:Class="NetErp.Billing.Customers.Views.CustomerDetailView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NetErp.Billing.Customers.Views"
             xmlns:h="clr-namespace:NetErp.Helpers"
             xmlns:busyIndicator="https://github.com/moh3ngolshani/BusyIndicator"
             xmlns:cal="http://caliburnmicro.com"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"             
             mc:Ignorable="d" 
             d:DesignHeight="650" d:DesignWidth="800" d:Background="White">
    <UserControl.Resources>
        <h:BindingProxy x:Key="DataContextProxy" Data="{Binding}"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <h:SimpleBooleanConverter x:Key="SimpleBooleanConverter" True="False" False="True"/>
        <h:EnumBooleanConverter x:Key="EnumBooleanConverter"/>
        <SolidColorBrush Color="Pink" Opacity="0.4" x:Key="ValidationBrush"/>
        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip">
                        <Setter.Value>
                            <ToolTip DataContext="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget}">
                                <ItemsControl ItemsSource="{Binding Path=(Validation.Errors)}" DisplayMemberPath="ErrorContent" />
                            </ToolTip>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="{StaticResource ValidationBrush}"/>
                    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                </Trigger>
            </Style.Triggers>
        </Style>        
    </UserControl.Resources>
    <busyIndicator:BusyMask x:Name="BusyIndicator"
                            IsBusy="{Binding IsBusy}"
                            IndicatorType="BouncingDot"
                            BusyContent="Please wait..."
                            BusyContentMargin="0,20,0,0"
                            IsBusyAtStartup="False"
                            Grid.Row="3">
        <Grid h:EnterKeyTraversal.IsEnabled="True">

            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="0"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="0"/>
            </Grid.ColumnDefinitions>

            <!--Toolbar-->
            <ToolBarTray IsLocked="True" Grid.Row="0" Grid.ColumnSpan="3" Background="White" Margin="10">
                <ToolBar Band="1" BandIndex="0" Background="Transparent" Width="auto" Loaded="ToolBar_Loaded">
                    <Button ToolBar.OverflowMode="Never" x:Name="GoBack">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="pack://application:,,,/DevExpress.Images.v23.2;component/Images/Navigation/Backward_32x32.png" Stretch="None"/>
                                <TextBlock Text="Regresar" FontSize="15" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button.Content>
                        <Button.ToolTip>
                            <ToolTip Content="Regresar"/>
                        </Button.ToolTip>
                    </Button>
                    <Separator Margin="5 0 5 0"/>
                    <Button ToolBar.OverflowMode="Never" x:Name="Save">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="pack://application:,,,/DevExpress.Images.v23.2;component/Images/Save/Save_32x32.png" Stretch="None" Margin="0 0 5 0"/>
                                <TextBlock Text="Guardar" FontSize="15" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button.Content>
                        <Button.ToolTip>
                            <ToolTip Content="Guardar cambios"/>
                        </Button.ToolTip>
                    </Button>
                </ToolBar>
            </ToolBarTray>

            <!--Detalle de fuente contable-->
            <!--<xctk:BusyIndicator Grid.Row="1" Grid.Column="1" IsBusy="{Binding Path=IsBusy, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">-->
            <Grid x:Name="GridSource" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <!--No está en uso-->
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <!--Titulo o Encabezado-->
                <!--<TextBlock Grid.Row="0" Grid.Column="0" Text="DETALLES DE TERCERO" Grid.ColumnSpan="3" HorizontalAlignment="Center" Padding="10" FontSize="22"/>-->

                <!--Tipo de proceso al que pertenece la fuente contable-->
                <!--adorners:Watermark.Text="Selecciona el tipo de proceso al cual pertenece esta fuente contable"-->

                <TextBlock Grid.Column="0" Grid.Row="1" Text="Régimen" VerticalAlignment="Center" Margin="4" Padding="3"/>
                <ComboBox Grid.Column="1" Grid.Row="1" 
                      VerticalAlignment="Center" 
                      Margin="4" Padding="3"
                      IsEnabled="{Binding IsNewRecord, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      x:Name="RegimeDictionary"
                      DisplayMemberPath="Value"
                      SelectedValuePath="Key"
                      SelectedValue="{Binding Path=SelectedRegime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>

                <!--Tipo de Documento-->
                <TextBlock Grid.Column="0" Grid.Row="2" 
                       Text="Tipo de Documento" 
                       VerticalAlignment="Center" 
                       Margin="4" Padding="3"/>
                <ComboBox Grid.Column="1" Grid.Row="2" 
                     Width="auto" 
                     VerticalAlignment="Center" 
                     Margin="4" Padding="3"
                     x:Name="IdentificationTypes"
                     DisplayMemberPath="Name"
                     SelectedValuePath="Id"
                     IsEnabled="{Binding IsNewRecord, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                     SelectedItem="{Binding Path=SelectedIdentificationType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <!--Numero de documento-->
                <TextBlock Grid.Column="0" Grid.Row="3" 
                       Text="Número" 
                       VerticalAlignment="Center" 
                       Margin="4" Padding="3"/>
                <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="3" Margin="4">
                    <TextBox  
                     Width="auto"
                     MinWidth="60"
                     VerticalAlignment="Center" 
                     Padding="3"
                     CharacterCasing="Upper"
                     MaxLength="15"
                     IsReadOnly="{Binding IsNewRecord, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource SimpleBooleanConverter}}"
                     x:Name="IdentificationNumber"/>
                    <TextBox Width="20" Margin="6 0 0 0" 
                 Text="{Binding VerificationDigit, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                 IsReadOnly="True"
                 IsTabStop="False"
                 VerticalContentAlignment="Center"
                 HorizontalContentAlignment="Center"
                 Visibility="{Binding SelectedIdentificationType.HasVerificationDigit, 
                 Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>

                <!--Codigo Largo-->
                <TextBlock Grid.Column="0" Grid.Row="4" 
                       Text="Tipo de captura" 
                       VerticalAlignment="Center" 
                       Margin="4" Padding="3"/>
                <StackPanel Orientation="Horizontal" Grid.Column="1" 
                       Grid.Row="4" 
                       Width="auto"                       
                       VerticalAlignment="Center" 
                       Margin="4">
                    <RadioButton Content="Persona Natural"
                             GroupName="CaptureType"
                             IsChecked="{Binding SelectedCaptureType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                             Converter={StaticResource EnumBooleanConverter}, ConverterParameter=PN}"/>
                    <RadioButton Content="Rason Social"
                             GroupName="CaptureType"
                             IsChecked="{Binding SelectedCaptureType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                             Converter={StaticResource EnumBooleanConverter}, ConverterParameter=RS}"
                             Margin="5 0 0 0"/>
                </StackPanel>
                <!--<TextBlock Text="{Binding SelectedCaptureType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->
                <!--Pages de datos de tercero-->
            </Grid>

            <TabControl Grid.Column="1" Grid.Row="2" Margin="4 4 4 4">
                <!--Datos Basicos-->
                <TabItem Header="Datos Basicos">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <!--Razon Social-->
                        <TextBlock Text="Razon Social" 
                                   Grid.Column="0" Grid.Row="0"
                                   Visibility="{Binding CaptureInfoAsRS, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Margin="4"/>
                        <TextBox x:Name="BusinessName" 
                                 CharacterCasing="Upper"
                                 Visibility="{Binding CaptureInfoAsRS, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" 
                                 Margin="4" Padding="3"/>
                        <!--Nombres y Apellidos-->
                        <!--Primer Nombre-->
                        <TextBlock Text="Primer Nombre" 
                                   Grid.Column="0" Grid.Row="2"
                                   Visibility="{Binding CaptureInfoAsPN, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Margin="4"/>
                        <TextBox x:Name="FirstName"
                                 CharacterCasing="Upper"
                                 Grid.Column="0" Grid.Row="3" 
                                 Visibility="{Binding CaptureInfoAsPN, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 Margin="4" Padding="3" />
                        <!--Segundo Nombre-->
                        <TextBlock Text="Segundo Nombre" 
                                   Grid.Column="1" Grid.Row="2"
                                   Visibility="{Binding CaptureInfoAsPN, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Margin="4"/>
                        <TextBox x:Name="MiddleName" 
                                 CharacterCasing="Upper"
                                 Grid.Column="1" Grid.Row="3" 
                                 Visibility="{Binding CaptureInfoAsPN, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 Margin="4" Padding="3"/>
                        <!--Primer Apellido-->
                        <TextBlock Text="Primer Apellido"
                                   Grid.Column="2" Grid.Row="2"
                                   Visibility="{Binding CaptureInfoAsPN, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Margin="4"/>
                        <TextBox x:Name="FirstLastName" 
                                 CharacterCasing="Upper"
                                 Grid.Column="2" Grid.Row="3" 
                                 Visibility="{Binding CaptureInfoAsPN, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 Margin="4" Padding="3"/>
                        <!--Segundo Apellido-->
                        <TextBlock Text="Segundo Apellido" 
                                   Grid.Column="3" Grid.Row="2"
                                   Visibility="{Binding CaptureInfoAsPN, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Margin="4"/>
                        <TextBox x:Name="MiddleLastName" 
                                 CharacterCasing="Upper"
                                 Grid.Column="3" Grid.Row="3" 
                                 Visibility="{Binding CaptureInfoAsPN, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 Margin="4" Padding="3"/>
                        <!--Informacion Telefonica-->
                        <!--Telefono fijo 1-->
                        <TextBlock Text="Telefono Fijo No. 1" Grid.Column="0" Grid.Row="4" Margin="4"/>
                        <TextBox x:Name="Phone1" 
                                 MaxLength="10"
                                 Grid.Column="0" Grid.Row="5"
                                 cal:Message.Attach="[Event LostFocus] = [Action PhoneInputLostFocus($source)]"
                                 Margin="4" Padding="3" Validation.ErrorTemplate="{x:Null}">
                        </TextBox>
                        <!--Telefono fijo No 2-->
                        <TextBlock Text="Telefono Fijo No. 2" 
                                   Grid.Column="1" Grid.Row="4"
                                   Margin="4"/>
                        <TextBox x:Name="Phone2" 
                                 MaxLength="10"
                                 Grid.Column="1" Grid.Row="5" 
                                 cal:Message.Attach="[Event LostFocus] = [Action PhoneInputLostFocus($source)]"
                                 Margin="4" Padding="3" Validation.ErrorTemplate="{x:Null}"/>
                        <!--Telefono Celular No 1-->
                        <TextBlock Text="Telefono Celular No. 1" Grid.Column="2" Grid.Row="4" Margin="4"/>
                        <TextBox x:Name="CellPhone1" 
                                 MaxLength="14"
                                 Grid.Column="2" Grid.Row="5" 
                                 cal:Message.Attach="[Event LostFocus] = [Action PhoneInputLostFocus($source)]"
                                 Margin="4" Padding="3" Validation.ErrorTemplate="{x:Null}"/>
                        <!--Telefono Celular No 2-->
                        <TextBlock Text="Telefono Celular No. 2" Grid.Column="3" Grid.Row="4" Margin="4"/>
                        <TextBox x:Name="CellPhone2" 
                                 MaxLength="14"
                                 Grid.Column="3" Grid.Row="5"
                                 cal:Message.Attach="[Event LostFocus] = [Action PhoneInputLostFocus($source)]"
                                 Margin="4" Padding="3" Validation.ErrorTemplate="{x:Null}"/>
                        <!--Pais-->
                        <TextBlock Text="Pais" Grid.Column="0" Grid.Row="6" Margin="4"/>
                        <ComboBox Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="7" 
                                                Margin="4" Padding="3"
                                                x:Name="Countries"
                                                DisplayMemberPath="Name"
                                                SelectedValuePath="Id"
                                                SelectedItem="{Binding Path=SelectedCountry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <!--Departamento-->
                        <TextBlock Text="Departamento" Grid.Column="0" Grid.Row="8" Margin="4"/>
                        <ComboBox 
                            Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="9" 
                            Margin="4" Padding="3"
                            x:Name="SelectedCountry_Departments"
                            DisplayMemberPath="Name"
                            SelectedValuePath="Id"
                            SelectedItem="{Binding SelectedDepartment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <!--Municipio-->
                        <TextBlock Text="Municipio" Grid.Column="0" Grid.Row="10" Margin="4"/>
                        <ComboBox Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="11" 
                                                Margin="4"                                                
                                                x:Name="SelectedDepartment_Cities"
                                                DisplayMemberPath="Name"
                                                SelectedValuePath="Id"
                                                SelectedValue="{Binding SelectedCityId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <!--Direccion-->
                        <TextBlock Text="Direccion" Grid.Column="0" Grid.Row="12" Margin="4"/>
                        <TextBox x:Name="Address"
                                 Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="13" 
                                 Margin="4" Padding="3"/>
                    </Grid>
                </TabItem>
                <!--Otros Datos-->
                <TabItem Header="Retenciones">
                    <ListView Margin="4" ItemsSource="{Binding Path=RetentionTypes, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="auto">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Width="auto" Header="Nombre" DisplayMemberBinding="{Binding Path=Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </TabItem>
                <!--Emails-->
                <TabItem Header="Emails" Height="20" VerticalAlignment="Bottom">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Descripción" Grid.Column="0"  Grid.Row="0" Margin="4 0 0 0"/>
                            <TextBlock Text="Email" Grid.Column="1"  Grid.Row="0" Margin="4 0 0 0"/>
                            <TextBox x:Name="EmailDescription" Text="{Binding Path=EmailDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" Grid.Row="1" Width="auto" Margin="4" Padding="4" FontSize="14"/>
                            <TextBox Text="{Binding Path=Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="1" Width="auto" Margin="4" Padding="4" FontSize="14"/>
                            <Button Grid.Column="2" Grid.Row="1" Margin="4" Padding="4" Width="auto" x:Name="AddEmail">
                                <Image Source="pack://application:,,,/DevExpress.Images.v23.2;component/Images/Actions/Add_16x16.png" Stretch="None">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" Value=".5"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>
                        </Grid>

                        <DataGrid Grid.Row="1" Grid.Column="0" Margin="4"
                              AutoGenerateColumns="False"
                              VerticalGridLinesBrush="LightGray"
                              HorizontalGridLinesBrush="LightGray"
                              BorderThickness="0"
                              CanUserAddRows="False"
                              SelectionMode="Single"
                              SelectionUnit="FullRow"     
                              MinRowHeight="30"
                              AlternatingRowBackground="Beige"
                              Background="Transparent"
                              CanUserDeleteRows="False"                                  
                              cal:Message.Attach="[Event CellEditEnding] = [Action EndRowEditing]"
                              ItemsSource="{Binding Path=Emails, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                              SelectedItem="{Binding Path=SelectedEmail, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <DataGrid.Columns>

                                <!--Descripción-->
                                <DataGridTemplateColumn Header="Descripción"
                                    Width="1*"
                                    >
                                    <DataGridTemplateColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        </Style>
                                    </DataGridTemplateColumn.HeaderStyle>
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                        TextWrapping="Wrap"
                                        VerticalAlignment="Center"
                                        Padding="3"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Padding="3"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>

                                <!--Email-->
                                <DataGridTemplateColumn Header="Email"
                                    Width="1*">
                                    <DataGridTemplateColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        </Style>
                                    </DataGridTemplateColumn.HeaderStyle>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Email, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                        TextWrapping="Wrap"
                                        VerticalAlignment="Center"
                                        Padding="3"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Path=Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 VerticalAlignment="Center"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>

                                <!-- Send Electronic Invoice -->
                                <DataGridTemplateColumn Width="auto">
                                    <DataGridTemplateColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTemplateColumn.HeaderStyle>
                                    <DataGridTemplateColumn.Header>
                                        <TextBlock Text="Envíar factura electrónica"/>
                                    </DataGridTemplateColumn.Header>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding Path=SendElectronicInvoice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      cal:Message.Attach="[Event Checked] = [Action EndRowEditing];[Event Unchecked] = [Action EndRowEditing]"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!--Delete Button-->
                                <DataGridTemplateColumn Width="40">
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Margin="4" Padding="4" Command="{Binding Data.DeleteMailCommand, Source={StaticResource DataContextProxy}}">
                                                <Image Source="pack://application:,,,/DevExpress.Images.v23.2;component/Images/Actions/Trash_16x16.png" Stretch="None" Margin="3 0 3 0"/>
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
            </TabControl>

            <!--</xctk:BusyIndicator>-->

        </Grid>

    </busyIndicator:BusyMask>
</UserControl>
