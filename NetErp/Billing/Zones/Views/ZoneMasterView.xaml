<UserControl x:Class="NetErp.Billing.Zones.Views.ZoneMasterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:h="clr-namespace:NetErp.Helpers"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:cal="http://caliburnmicro.com"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
             xmlns:busyIndicator="https://github.com/moh3ngolshani/BusyIndicator"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" 
             xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
             xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
             xmlns:local="clr-namespace:NetErp.Billing.Zones.Views"
             xmlns:uc="clr-namespace:NetErp.UserControls" 
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Background="Transparent">
    <Grid>
        <Grid.RowDefinitions>
            <!--ToolBarTray-->
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <!--Filters-->
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <dxr:RibbonControl Grid.Column="0" IsSimplified="False" Grid.Row="0" 
AllowSimplifiedRibbon="True" ShowApplicationButton="False" ToolbarShowMode="Hide" 
RibbonStyle="Office2010" ToolbarShowCustomizationButton="False" RibbonTitleBarVisibility="Collapsed" VerticalAlignment="Center">

            <dxr:RibbonPage Caption="Zonas">

                <dxr:RibbonPageGroup Caption="Acciones">
                    <dxb:BarButtonItem     Glyph="{dx:DXImage 'Images/Actions/New_16x16.png'}" 
                LargeGlyph="{dx:DXImage 'Images/Actions/New_32x32.png'}" 
                Content="Nuevo"
                RibbonStyle="Large"
                Hint="Crear una nueva zona">
                        <dxmvvm:Interaction.Behaviors>
                            <dxmvvm:EventToCommand Command="{Binding Path=CreateZoneCommand}" EventName="ItemClick"/>
                        </dxmvvm:Interaction.Behaviors>
                    </dxb:BarButtonItem>
                    <dxb:BarItemSeparator/>
                    <dxb:BarButtonItem Content="Eliminar" 
                Glyph="{dx:DXImage 'Images/Actions/DeleteList_16x16.png'}" 
                LargeGlyph="{dx:DXImage 'Images/Actions/DeleteList_32x32.png'}"                                             
                Description="Eliminar"
                Hint="Eliminar la zona seleccionada"    
                IsEnabled="{Binding Path=CanDeleteZone, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                RibbonStyle="Large">
                        <dxmvvm:Interaction.Behaviors>
                            <dxmvvm:EventToCommand Command="{Binding Path=DeleteZoneCommand}" EventName="ItemClick"/>
                        </dxmvvm:Interaction.Behaviors>
                    </dxb:BarButtonItem>
                    <dxb:BarItemLinkSeparator/>
                </dxr:RibbonPageGroup>
            </dxr:RibbonPage>
        </dxr:RibbonControl>
        <CheckBox Grid.Row="1" IsChecked="{Binding Path=ShowActiveZonesOnly, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
            <TextBlock Text="Mostrar únicamente zonas activas" VerticalAlignment="Center" FontSize="13">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=ShowActiveZonesOnly}" Value="true">
                                <Setter Property="Foreground" Value="blue"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </CheckBox>
        <StackPanel Grid.Row="2" Orientation="Vertical">
            <TextBlock Text="¿Qué desea buscar?" VerticalAlignment="Center" Margin="0 4 0 5" FontSize="13"/>
            <xctk:WatermarkTextBox
                KeepWatermarkOnGotFocus="True"                                       
                ToolTip="Escribe aqui para buscar"  
                MinHeight="25" Margin="0 0 0 5"
                VerticalContentAlignment="Center"
                CharacterCasing="Upper"
                h:FocusBehavior.IsFocused="True"
                Text="{Binding FilterSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}">
                <xctk:WatermarkTextBox.Watermark>
                    <TextBlock Text="Escribe por lo menos 3 letras para iniciar la busqueda" Margin="4,0,0,0" FontSize="13" />
                </xctk:WatermarkTextBox.Watermark>
            </xctk:WatermarkTextBox>

        </StackPanel>

        <busyIndicator:BusyMask x:Name="BusyIndicator"
                            IsBusy="{Binding IsBusy}"
                            IndicatorType="BouncingDot"
                            BusyContent="Please wait..."
                            BusyContentMargin="0,20,0,0"
                            IsBusyAtStartup="False"
                            Grid.Row="3">
            
            <dxg:GridControl ItemsSource="{Binding Path=Zones, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                         SelectedItem="{Binding Path=SelectedItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="0 5 0 0">
                <dxg:GridControl.View>
                    <dxg:TableView AllowCascadeUpdate="False" 
                   EnableSelectedRowAppearance="True" AllowSorting="False"
                   AllowColumnMoving="False"
                   ShowGroupPanel="False" AlternateRowBackground="Beige">
                        <dxg:TableView.RowStyle>
                            <Style TargetType="dxg:RowControl">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Row.IsActive}" Value="False">
                                        <Setter Property="Background" Value="Red"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </dxg:TableView.RowStyle>
                    </dxg:TableView>
                </dxg:GridControl.View>
                <dxg:GridColumn Header="Nombre de la zona" 
                            Width="*"
                            Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                            HorizontalHeaderContentAlignment="Center"/>
                <dxg:GridColumn Width="50">
                    <dxg:GridColumn.CellTemplate>
                        <DataTemplate>
                            <Button cal:Message.Attach="[Event Click] = [Action EditZoneAsync]" 
                                BorderThickness="0"
                                Padding="3"
                                Margin="3"
                                Width="auto" Height="auto" >
                                <Button.Content>
                                    <Image Source="{dx:SvgImageSource Uri='pack://application:,,,/DevExpress.Images.v24.2;component/SvgImages/XAF/Action_Edit.svg', Size='16,16'}" Stretch="None" />
                                </Button.Content>
                            </Button>
                        </DataTemplate>
                    </dxg:GridColumn.CellTemplate>
                </dxg:GridColumn>
            </dxg:GridControl>
        </busyIndicator:BusyMask>
        
        <uc:GridPaging Grid.Row="4" Grid.Column="0" 
           HorizontalAlignment="stretch"
           VerticalAlignment = "center" 
           ChangedIndexCommand="{Binding PaginationCommand}" 
           PageIndex="{Binding PageIndex, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
           PageSize="{Binding PageSize, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
           TotalCount="{Binding TotalCount, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
           ResponseTime="{Binding ResponseTime, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
       
    </Grid>
    

</UserControl>
