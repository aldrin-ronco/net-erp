<UserControl x:Class="NetErp.Billing.PriceList.Views.UpdatePriceListModalView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
             xmlns:h="clr-namespace:NetErp.Helpers"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" 
             xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
             xmlns:local="clr-namespace:NetErp.Billing.PriceList.Views"
             mc:Ignorable="d" 
             d:DesignHeight="550" d:DesignWidth="800"
             FontFamily="Century Gothic">
    <UserControl.Resources>
        <h:StringToBooleanConverter x:Key="StringToBooleanConverter"/>
    </UserControl.Resources>
    <Grid Height="520" Width="500" Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <dx:DXTabControl>
            <dx:DXTabItem Header="Datos Básicos">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Vertical" Grid.Row="0">
                        
                        <StackPanel Orientation="Vertical" Margin="0 0 0 5">
                            <TextBlock Text="Nombre de la lista de precios" Margin="0 0 0 2"/>

                            <TextBox CharacterCasing="UPPER" Padding="4" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxmvvm:FocusBehavior SourceObject="{Binding}" PropertyName="NameFocus"/>
                                </dxmvvm:Interaction.Behaviors>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Orientation="Vertical" Margin="0 5 0 15">
                            <TextBlock Text="Bodega para determinar el comportamiento del costo en la lista de precios" Margin="0 0 0 2"/>
                            <dxe:ComboBoxEdit ItemsSource="{Binding Storages, UpdateSourceTrigger=PropertyChanged}" EditValue="{Binding SelectedStorage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              DisplayMember="Name" IsTextEditable="False" Padding="2"/>
                        </StackPanel>

                        <dxe:CheckEdit Content="¿Esta lista de precios discrimina impuesto?" Margin="0 5 0 5" Style="{StaticResource BlueCheckedTextStyle}"
                                       IsChecked="{Binding IsTaxable, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

                        <!-- Este es el control que se oculta/muestra -->
                        <dxe:CheckEdit   Content="¿El precio de venta incluye impuesto?" Margin="0 5 0 5" Style="{StaticResource BlueCheckedTextStyle}"
                                         IsChecked="{Binding PriceListIncludeTax, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         Visibility="{Binding IsTaxable, Converter={dxmvvm:BooleanToVisibilityConverter}}"/>

                        <StackPanel Orientation="Horizontal" Margin="0 5 0 5">
                            <RadioButton GroupName="Formula" Content="Calculo por defecto" Margin="0 0 10 0" Style="{StaticResource BlueRadioButtonCheckedTextStyle}"
                                         IsChecked="{Binding SelectedFormula, Converter={StaticResource StringToBooleanConverter}, ConverterParameter=D, UpdateSourceTrigger=PropertyChanged}"/>
                            <RadioButton GroupName="Formula" Content="Calculo alternativo" Margin="10 0 0 0" Style="{StaticResource BlueRadioButtonCheckedTextStyle}"
                                         IsChecked="{Binding SelectedFormula, Converter={StaticResource StringToBooleanConverter}, ConverterParameter=A, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>

                        <StackPanel Orientation="Vertical" Margin="0 5 0 5">
                            <StackPanel Orientation="Horizontal" Margin="0 0 0 2">
                                <Image Source="{dx:DXImage 'Images/Function Library/Information_16x16.png'}" Width="16" Margin="0 0 1 0" VerticalAlignment="Center"/>
                                <TextBlock FontFamily="Century Gothic" TextWrapping="Wrap">
                                    <Run Text="Si elige esta opción la formula que se utilizará para calcular"/>
                                    <Run Text="el precio de venta" FontWeight="Bold"/>
                                    <Run Text="es: "/>
                                </TextBlock>
                            </StackPanel>
                            <TextBlock Text="{Binding Formula}" FontWeight="Bold" Margin="0 2 0 0" HorizontalAlignment="Center"/>
                        </StackPanel>
                    </StackPanel>
                    <TextBlock Text="Centros de costos compatibles con esta lista de precios" FontFamily="Century Gothic" Margin="0 30 0 2" Grid.Row="1" HorizontalAlignment="Center" FontWeight="Bold" FontSize="14"/>
                    <dxg:GridControl ItemsSource="{Binding ShadowCostCenters, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2">
                        <dxg:GridControl.View>
                            <dxg:TableView AllowCascadeUpdate="False" 
                                    AllowPaging="False"
                                    EnableSelectedRowAppearance="True"
                                    ShowGroupPanel="False" AlternateRowBackground="Beige" AllowEditing="False">
                            </dxg:TableView>
                        </dxg:GridControl.View>

                        <dxg:GridColumn Header="Nombre" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Width="*"/>
                    </dxg:GridControl>

                    <dxe:CheckEdit Content="¿Lista de precios activa?" Grid.Row="4" Margin="0 5 0 0" IsChecked="{Binding IsActive, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Style="{StaticResource BlueCheckedTextStyle}"/>
                </Grid>
            </dx:DXTabItem>
            <dx:DXTabItem Header="Formas de pago">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="Seleccione las formas de pago que estarán disponibles cuando se facture con esta lista de precios" TextWrapping="Wrap" Grid.Row="0" Margin="0 0 0 10"/>
                    <dxg:GridControl Grid.Row="1" ItemsSource="{Binding PaymentMethods, UpdateSourceTrigger=PropertyChanged}">
                        <dxg:GridControl.View>
                            <dxg:TableView AllowCascadeUpdate="False" AllowSorting="False" AllowColumnMoving="False"
                                    AllowPaging="False"
                                    EnableSelectedRowAppearance="True"
                                    ShowGroupPanel="False" AlternateRowBackground="Beige" AllowEditing="False">
                            </dxg:TableView>
                        </dxg:GridControl.View>

                        <dxg:GridColumn Header="Abreviación" Binding="{Binding Abbreviation, UpdateSourceTrigger=PropertyChanged}" Width="90"/>
                        <dxg:GridColumn Header="Nombre" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Width="*"/>
                        <dxg:GridColumn Header=""
                                        Width="30"
                                        HorizontalHeaderContentAlignment="Center">
                            <dxg:GridColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox Margin="4" VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  IsChecked="{Binding RowData.Row.IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DataTemplate>
                            </dxg:GridColumn.CellTemplate>
                        </dxg:GridColumn>
                    </dxg:GridControl>
                </Grid>
            </dx:DXTabItem>
            <dx:DXTabItem Header="Otros">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <dxe:CheckEdit Content="Aplicar descuento automaticamente" Grid.Row="0" Style="{StaticResource BlueCheckedTextStyle}" Margin="0 0 0 5" 
                                   IsChecked="{Binding AutoApplyDiscount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <dxe:CheckEdit Content="Permitir cambiar precio de venta en la factura" Grid.Row="1" Style="{StaticResource BlueCheckedTextStyle}" Margin="0 5 0 5" 
                                   IsChecked="{Binding EditablePrice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <dxe:CheckEdit Content="Lista de precios pública (Disponible para todos los clientes)" Grid.Row="3" Style="{StaticResource BlueCheckedTextStyle}" Margin="0 5 0 5"
                                   IsChecked="{Binding IsPublic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <StackPanel Grid.Row="4" Margin="0 5 0 0" Orientation="Vertical">
                        <TextBlock Text="Cuando la lista de precios cambie quiero..." Margin="0 0 0 2"/>
                        <dxe:ComboBoxEdit ItemsSource="{Binding ListUpdateBehaviorOnCostChange, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsTextEditable="False" DisplayMember="Value"
                                          EditValue="{Binding SelectedListUpdateBehaviorOnCostChange, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" ValueMember="Key"/>
                    </StackPanel>
                </Grid>
            </dx:DXTabItem>
        </dx:DXTabControl>

        <StackPanel Grid.Row="1" HorizontalAlignment="Center" Orientation="Horizontal" Margin="0 10 0 0">
            <Button Margin="0 0 5 0" Command="{Binding SaveCommand}">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Guardar" FontFamily="Century Gothic" Margin="0 0 5 0"/>
                        <Image Source="{dx:DXImage 'Images/Save/Save_16x16.png'}"/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Command="{Binding CancelCommand}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Cancelar" FontFamily="Century Gothic" Margin="0 0 5 0"/>
                    <Image Source="{dx:DXImage 'Images/Actions/Cancel_16x16.png'}"/>
                </StackPanel>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
