<UserControl x:Class="NetErp.Inventory.ItemSizes.Views.ItemSizeMasterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:h="clr-namespace:NetErp.Helpers"
             xmlns:behavior="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:local="clr-namespace:NetErp.Inventory.ItemSizes.Views"
             xmlns:viewmodels="clr-namespace:NetErp.Inventory.ItemSizes.ViewModels"
             xmlns:model="clr-namespace:NetErp.Inventory.ItemSizes.DTO"
             d:DataContext="{d:DesignInstance Type=viewmodels:ItemSizeMasterViewModel}"
             xmlns:busyIndicator="https://github.com/moh3ngolshani/BusyIndicator"
             mc:Ignorable="d"
             FontFamily="JetBrains Mono" FontSize="10"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <h:BindingProxy x:Key="DataContextProxy" Data="{Binding}"/>
        <dxmvvm:BooleanNegationConverter x:Key="BooleanNegationConverter"/>
    </UserControl.Resources>
    <busyIndicator:BusyMask x:Name="BusyIndicator"
                            IsBusy="{Binding IsBusy}"
                            IndicatorType="BouncingDot"
                            BusyContent="Please wait..."
                            BusyContentMargin="0,20,0,0"
                            IsBusyAtStartup="False"
                            Background="Transparent">

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TreeView ItemsSource="{Binding Path=ItemSizesMaster, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  x:Name="SizesTreeView"
                  h:TreeViewExtension.SelectItemOnRightClick="True"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"                  
                  BorderThickness="0"
                  Grid.Column="0"
                  Grid.Row="1"
                  Margin="0 5 0 0"
                  SelectedItemChanged="TreeViewSelectedItemChanged">
                <TreeView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Crear un grupo de tallaje" Click="CreateItemSize"/>
                    </ContextMenu>
                </TreeView.ContextMenu>
                <behavior:Interaction.Behaviors>
                    <h:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </behavior:Interaction.Behaviors>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsExpanded}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="Blue"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type model:ItemSizeMasterDTO}" ItemsSource="{Binding Sizes}">
                        <StackPanel Orientation="Horizontal" Margin="-1,0,0,0">
                            <Image Width="18" Height="18">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <!--Close Folder-->
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsExpanded}" Value="false"/>
                                                </MultiDataTrigger.Conditions>
                                                <!--PlaceHolderImage-->
                                                <Setter Property="Source" Value="{dx:DXImage 'SvgImages/Icon Builder/Actions_FolderClose.svg'}"/>
                                            </MultiDataTrigger>
                                            <!--Open Folder-->
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsExpanded}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Source" Value="{dx:DXImage 'SvgImages/Icon Builder/Actions_FolderOpen.svg'}"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBox x:Name="TextBoxName" Margin="4 0 0 0" Text="{Binding Path=Data.TextBoxName, Source={StaticResource DataContextProxy}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                     Visibility="{Binding IsEditing, Converter={dxmvvm:BooleanToVisibilityConverter}}" VerticalAlignment="Center"
                                     CharacterCasing="Upper">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{Binding Path=Data.OnPressedEnterKeyCommand, Source={StaticResource DataContextProxy}}"/>
                                </TextBox.InputBindings>
                            </TextBox>
                            <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="4 0 0 0" 
                                   ContextMenuService.Placement="MousePoint" VerticalAlignment="Center"
                                   Visibility="{Binding IsEditing, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}}">
                                <TextBlock.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Modificar grupo de tallaje" Command="{Binding Path=Data.EditItemSizeMasterCommand, Source={StaticResource DataContextProxy}}"/>
                                        <Separator/>
                                        <MenuItem Header="Crear un grupo de tallaje" Click="CreateItemSize"/>
                                        <Separator/>
                                        <MenuItem Header="Crear tallaje" Click="CreateItemSizeDetailFromMaster"/>
                                        <Separator/>
                                        <MenuItem Header="Eliminar grupo de tallaje" Command="{Binding Path=Data.DeleteItemSizeMasterCommand, Source={StaticResource DataContextProxy}}"/>
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <DataTemplate DataType="{x:Type model:ItemSizeDetailDTO}">
                        <StackPanel Orientation="Horizontal" Margin="-1,0,0,0">
                            <Image Width="18" Height="18" Source="{dx:DXImage 'Images/Miscellaneous/HighlightActiveElements_16x16.png'}"/>
                            <TextBox x:Name="TextBoxName" Margin="4 0 0 0" Text="{Binding Path=Data.TextBoxName, Source={StaticResource DataContextProxy}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                     Visibility="{Binding IsEditing, Converter={dxmvvm:BooleanToVisibilityConverter}}" VerticalAlignment="Center"
                                     CharacterCasing="Upper">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{Binding Path=Data.OnPressedEnterKeyCommand, Source={StaticResource DataContextProxy}}"/>
                                </TextBox.InputBindings>
                            </TextBox>
                            <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="4 0 0 0" 
                                   ContextMenuService.Placement="MousePoint" VerticalAlignment="Center"
                                   Visibility="{Binding IsEditing, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}}">
                                <TextBlock.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Modificar tallaje" Command="{Binding Path=Data.EditItemSizeDetailCommand, Source={StaticResource DataContextProxy}}" />
                                        <Separator/>
                                        <MenuItem Header="Crear tallaje" Click="CreateItemSize"/>
                                        <Separator/>
                                        <MenuItem Header="Eliminar tallaje" Command="{Binding Path=Data.DeleteItemSizeDetailCommand, Source={StaticResource DataContextProxy}}"/>
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </TreeView.Resources>
            </TreeView>
        </Grid>
    </busyIndicator:BusyMask>
</UserControl>
