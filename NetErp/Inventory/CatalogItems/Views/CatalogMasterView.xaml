<UserControl x:Class="NetErp.Inventory.CatalogItems.Views.CatalogMasterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:h="clr-namespace:NetErp.Helpers"
             xmlns:model="clr-namespace:NetErp.Inventory.CatalogItems.DTO"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
             xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
             xmlns:behavior="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:local="clr-namespace:NetErp.Inventory.CatalogItems.Views"
             xmlns:tabItem="clr-namespace:NetErp.Inventory.CatalogItems.TabControlPages.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <h:BindingProxy x:Key="DataContextProxy" Data="{Binding}"/>
    </UserControl.Resources>
    <Grid Width="auto" Height="auto">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <dxr:RibbonControl Grid.Row="0" Margin="0 0 0 10" IsSimplified="False" 
                           AllowSimplifiedRibbon="True" ShowApplicationButton="False" ToolbarShowMode="Hide" 
                           RibbonStyle="Office2010" ToolbarShowCustomizationButton="False" RibbonTitleBarVisibility="Collapsed" VerticalAlignment="Center">
            <dxr:RibbonPage Caption="Opciones">
                <dxr:RibbonPageGroup Caption="Acciones">
                    <dxb:BarButtonItem Content="Editar" RibbonStyle="Large" 
                                       Glyph="{dx:DXImage 'Images/Edit/Edit_16x16.png'}"
                                       LargeGlyph="{dx:DXImage 'Images/Edit/Edit_32x32.png'}">
                    </dxb:BarButtonItem>
                    <dxb:BarItemSeparator/>
                    <dxb:BarButtonItem Content="Deshacer" RibbonStyle="Large" Glyph="{dx:DXImage 'Images/History/Undo_16x16.png'}"
                                       LargeGlyph="{dx:DXImage 'Images/History/Undo_32x32.png'}">

                    </dxb:BarButtonItem>
                    <dxb:BarItemSeparator/>
                    <dxb:BarButtonItem Content="Guardar" RibbonStyle="Large" Glyph="{dx:DXImage 'Images/Save/Save_16x16.png'}"
                                       LargeGlyph="{dx:DXImage 'Images/Save/Save_32x32.png'}">

                    </dxb:BarButtonItem>
                </dxr:RibbonPageGroup>
            </dxr:RibbonPage>
        </dxr:RibbonControl>

        <ComboBox Grid.Row="1" Width="auto" HorizontalAlignment="Left" 
                  ItemsSource="{Binding Path=Catalogs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  DisplayMemberPath="Name"
                  SelectedItem="{Binding Path=SelectedCatalog, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.4*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TreeView 
              ItemsSource="{Binding Path=SelectedCatalog.ItemsTypes, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
              h:TreeViewExtension.SelectItemOnRightClick="True"
              ScrollViewer.VerticalScrollBarVisibility="Auto"
              ScrollViewer.HorizontalScrollBarVisibility="Disabled"                  
              BorderThickness="0"
              Grid.Column="0"
              Margin="0 5 0 0">
                <!--<behavior:Interaction.Behaviors>
                    <h:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}"/>
                </behavior:Interaction.Behaviors>-->
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsExpanded}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="Blue"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <!--itemTypes-->
                    <HierarchicalDataTemplate DataType="{x:Type model:ItemTypeDTO}" ItemsSource="{Binding ItemsCategories}">
                        <StackPanel Orientation="Horizontal" Margin="-1,0,0,0">
                            <Image Width="18" Height="18">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <!--Close Folder-->
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsExpanded}" Value="false"/>
                                                </MultiDataTrigger.Conditions>
                                                <!--PlaceHolderImage-->
                                                <Setter Property="Source" Value="{dx:DXImage 'SvgImages/Icon Builder/Actions_FolderClose.svg'}"/>
                                            </MultiDataTrigger>
                                            <!--Open Folder-->
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsExpanded}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Source" Value="{dx:DXImage 'SvgImages/Icon Builder/Actions_FolderOpen.svg'}"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <!--itemCategory-->
                    <HierarchicalDataTemplate DataType="{x:Type model:ItemCategoryDTO}" ItemsSource="{Binding SubCategories}">
                        <StackPanel Orientation="Horizontal" Margin="-1,0,0,0">
                            <Image Width="18" Height="18">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <!--Close Folder-->
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsExpanded}" Value="false"/>
                                                </MultiDataTrigger.Conditions>
                                                <!--PlaceHolderImage-->
                                                <Setter Property="Source" Value="{dx:DXImage 'SvgImages/Icon Builder/Actions_FolderClose.svg'}"/>
                                            </MultiDataTrigger>
                                            <!--Open Folder-->
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsExpanded}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Source" Value="{dx:DXImage 'SvgImages/Icon Builder/Actions_FolderOpen.svg'}"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <!--itemSubCategory-->
                    <HierarchicalDataTemplate DataType="{x:Type model:ItemSubCategoryDTO}" ItemsSource="{Binding Items}">
                        <StackPanel Orientation="Horizontal" Margin="-1,0,0,0">
                            <Image Width="18" Height="18">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <!--Close Folder-->
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsExpanded}" Value="false"/>
                                                </MultiDataTrigger.Conditions>
                                                <!--PlaceHolderImage-->
                                                <Setter Property="Source" Value="{dx:DXImage 'SvgImages/Icon Builder/Actions_FolderClose.svg'}"/>
                                            </MultiDataTrigger>
                                            <!--Open Folder-->
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsExpanded}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Source" Value="{dx:DXImage 'SvgImages/Icon Builder/Actions_FolderOpen.svg'}"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <!--Item-->
                    <DataTemplate DataType="{x:Type model:ItemDTO}">
                        <StackPanel Orientation="Horizontal" Margin="-1,0,0,0">
                            <Image Width="18" Height="18" Source="{dx:DXImage 'Images/Miscellaneous/HighlightActiveElements_16x16.png'}"/>
                            <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="0.5 0 0 0"/>
                        </StackPanel>
                    </DataTemplate>
                </TreeView.Resources>
            </TreeView>
            <!--TabControl-->
            <Grid Grid.Column="1">

                <Grid.RowDefinitions>
                    <RowDefinition Height="0.15*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
            <dx:DXTabControl Grid.Row="1"
                             Background="Transparent"
                             TabContentCacheMode="CacheTabsOnSelecting"
                             HorizontalContentAlignment="Stretch"
                             Margin="20 0 0 0"
                             Visibility="{Binding SelectedItem.IsSelected, Converter={dx:BooleanToVisibilityConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <dx:DXTabItem Header="Básicos">
                        <tabItem:BasicView DataContext="{Binding}" IsEnabled="{Binding IsEditing, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </dx:DXTabItem>
                    <dx:DXTabItem Header="Códigos de barras" >
                        <tabItem:EanCodeView DataContext="{Binding}" IsEnabled="{Binding IsEditing, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </dx:DXTabItem>
                    <dx:DXTabItem Header="Existencias">
                    
                    </dx:DXTabItem>
                    <dx:DXTabItem Header="Proveedores">
                    
                    </dx:DXTabItem>
                    <dx:DXTabItem Header="Otros datos" >
                        <tabItem:OtherDataView DataContext="{Binding}" IsEnabled="{Binding IsEditing, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </dx:DXTabItem>
                <dx:DXTabControl.View>
                    <dx:TabControlScrollView ShowHeaderMenu="True" ShowHiddenTabItemsInHeaderMenu="False" HeaderLocation="Top" HeaderOrientation="Horizontal" AllowAnimation="True" 
                                         ScrollButtonShowMode="Never"/>
                </dx:DXTabControl.View>
            </dx:DXTabControl>
                <dxr:RibbonControl Visibility="{Binding SelectedItem.IsSelected, Converter={dx:BooleanToVisibilityConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Grid.Row="0" Margin="20 0 0 10" IsSimplified="False" 
                           AllowSimplifiedRibbon="True" ShowApplicationButton="False" ToolbarShowMode="Hide" 
                           RibbonStyle="Office2010" ToolbarShowCustomizationButton="False" RibbonTitleBarVisibility="Collapsed" VerticalAlignment="Center"
                           MinimizationButtonVisibility="Collapsed">
                    <dxr:RibbonPage Caption="Opciones">
                        <dxr:RibbonPageGroup Caption="Acciones">
                            <dxb:BarButtonItem Content="Editar" RibbonStyle="SmallWithText" Glyph="{dx:DXImage 'Images/Edit/Edit_16x16.png'}" 
                                                IsEnabled="{Binding CanEditItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxmvvm:EventToCommand Command="{Binding Path=EditItemCommand}" EventName="ItemClick"/>
                                </dxmvvm:Interaction.Behaviors>
                            </dxb:BarButtonItem>
                            <dxb:BarItemSeparator/>
                            <dxb:BarButtonItem Content="Deshacer" RibbonStyle="SmallWithText" Glyph="{dx:DXImage 'Images/History/Undo_16x16.png'}"
                                               IsEnabled="{Binding CanUndo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxmvvm:EventToCommand Command="{Binding Path=UndoCommand}" EventName="ItemClick"/>
                                </dxmvvm:Interaction.Behaviors>
                            </dxb:BarButtonItem>
                            <dxb:BarItemSeparator/>
                            <dxb:BarButtonItem Content="Guardar" RibbonStyle="SmallWithText" Glyph="{dx:DXImage 'Images/Save/Save_16x16.png'}"
                                               >

                            </dxb:BarButtonItem>
                        </dxr:RibbonPageGroup>
                    </dxr:RibbonPage>
                </dxr:RibbonControl>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
