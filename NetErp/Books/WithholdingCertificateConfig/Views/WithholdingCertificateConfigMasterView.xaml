<UserControl x:Class="NetErp.Books.WithholdingCertificateConfig.Views.WithholdingCertificateConfigMasterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:h="clr-namespace:NetErp.Helpers"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:busyIndicator="https://github.com/moh3ngolshani/BusyIndicator"
             xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
             xmlns:local="clr-namespace:NetErp.Books.WithholdingCertificateConfig.Views"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:cal="http://caliburnmicro.com"
             xmlns:uc="clr-namespace:NetErp.UserControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <busyIndicator:BusyMask x:Name="BusyIndicator"
                     IsBusy="{Binding IsBusy}"
                     IndicatorType="BouncingDot"
                     BusyContent="Please wait..."
                     BusyContentMargin="0,20,0,0"
                     IsBusyAtStartup="False">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
               
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <dxr:RibbonControl Grid.Column="0" 
            IsSimplified="False" 
            Grid.Row="0" 
            AllowSimplifiedRibbon="True" 
            ShowApplicationButton="False" 
            ToolbarShowMode="Hide" 
            RibbonStyle="Office2010" 
            ToolbarShowCustomizationButton="False" 
            RibbonTitleBarVisibility="Collapsed" 
            VerticalAlignment="Center"> 
                <dxr:RibbonPage Caption="General">
                <dxr:RibbonPageGroup Caption="Acciones">

                    <dxb:BarButtonItem Glyph="{dx:DXImage 'Images/New/New_16x16.png'}" 
                           LargeGlyph="{dx:DXImage 'Images/New/New_16x16.png'}" 
                           Content="Nuevo"
                           RibbonStyle="Large"
                           IsEnabled="{Binding Path=IsBusy, 
                                               Mode=OneWay, 
                                               UpdateSourceTrigger=PropertyChanged, 
                                               Converter={dxmvvm:BooleanToVisibilityConverter 
                                               Inverse=True}}"
                           Hint="Nuevo ">
                        <dxmvvm:Interaction.Behaviors>
                            <dxmvvm:EventToCommand Command="{Binding Path=NewCommand}" 
                               EventName="ItemClick"/>
                        </dxmvvm:Interaction.Behaviors>
                    </dxb:BarButtonItem>

                    <dxb:BarItemSeparator/>
                  
                    <dxb:BarItemLinkSeparator/>
                </dxr:RibbonPageGroup>
            </dxr:RibbonPage>
            </dxr:RibbonControl>
            <dxg:GridControl Grid.Row="2" Margin="0 10 0 0"
                                           
                EnableSmartColumnsGeneration="True"
                SelectedItem="{Binding Path=SelectedWithholdingCertificateConfigGraphQLModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                ItemsSource="{Binding Path=Certificates, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
             >
                <dxg:GridControl.View>
                    <dxg:TableView AllowCascadeUpdate="False" 
               EnableSelectedRowAppearance="True"
               ShowGroupPanel="False" AlternateRowBackground="Beige"/>
                    
                </dxg:GridControl.View>

                <dxg:GridColumn Header="Id" HorizontalHeaderContentAlignment="Center" Width="auto"
     Binding="{Binding Id, UpdateSourceTrigger=PropertyChanged}"/>

                <dxg:GridColumn Header="Nombre" Width="*" HorizontalHeaderContentAlignment="Center"
                 Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>

                <dxg:GridColumn Header=""
     Width="45"
     HorizontalHeaderContentAlignment="Center">
                    <dxg:GridColumn.CellTemplate>
                        <DataTemplate>
                            <Button
            BorderThickness="0"
            Padding="3"
            Margin="3"
            Width="auto" Height="auto" 
            cal:Message.Attach="[Event Click] = [Action EditWithholdingCertificateConfig]">
                                <Button.Content>
                                    <Image Source="{dx:SvgImageSource Uri='pack://application:,,,/DevExpress.Images.v24.2;component/SvgImages/XAF/Action_Edit.svg', Size='16,16'}" Stretch="None" />
                                </Button.Content>
                            </Button>
                        </DataTemplate>
                    </dxg:GridColumn.CellTemplate>
                </dxg:GridColumn>
            </dxg:GridControl>
            <uc:GridPaging Grid.Row="3" Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               ChangedIndexCommand="{Binding PaginationCommand}" 
               PageIndex="{Binding PageIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
               PageSize="{Binding PageSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
               TotalCount="{Binding TotalCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
               ResponseTime="{Binding ResponseTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
    </busyIndicator:BusyMask>
</UserControl>
