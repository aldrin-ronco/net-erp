<UserControl x:Class="NetErp.Books.IdentificationTypes.Views.IdentificationTypeMasterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:h="clr-namespace:NetErp.Helpers"
             xmlns:cal="http://caliburnmicro.com"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" 
             xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:busyIndicator="https://github.com/moh3ngolshani/BusyIndicator"
             xmlns:local="clr-namespace:NetErp.Books.IdentificationTypes.Views" 
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
             xmlns:viewmodels="clr-namespace:NetErp.Books.IdentificationTypes.ViewModels" 
             d:DataContext="{d:DesignInstance Type=viewmodels:IdentificationTypeMasterViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" FontFamily="Century Gothic">
    <UserControl.Resources>
        <Style x:Key="PlaceHolderStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Opacity" Value="0.5" />
            <Setter Property="FontStyle" Value="Oblique" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style x:Key="DataGridTextColumnElementStyleCode" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="DataGridTextColumnElementStyleGeneral" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="DataGridCheckColumnElementStyle" TargetType="CheckBox">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
    </UserControl.Resources>
    <Grid Width="auto" Height="auto" Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <!--ToolBarTray-->
            <RowDefinition Height="auto"/>
            <!--Filtros-->
            <RowDefinition Height="auto"/>
            <!--Buscar-->
            <RowDefinition Height="*"/>
            <!--DataGridView-->
            <RowDefinition Height="auto"/>
            <!--StatusBar-->
        </Grid.RowDefinitions>

        <!--Toolbar-->
        <dxr:RibbonControl Grid.Column="0" Grid.ColumnSpan="3" IsSimplified="False" 
           AllowSimplifiedRibbon="True" ShowApplicationButton="False" ToolbarShowMode="Hide" 
           RibbonStyle="Office2010" ToolbarShowCustomizationButton="False" RibbonTitleBarVisibility="Collapsed" VerticalAlignment="Center">

            <dxr:RibbonPage Caption="General">

                <dxr:RibbonPageGroup Caption="Acciones">
                    <dxb:BarButtonItem     Glyph="{dx:DXImage 'Images/Actions/New_16x16.png'}" 
                           LargeGlyph="{dx:DXImage 'Images/Actions/New_32x32.png'}" 
                           Content="Nuevo"
                           RibbonStyle="Large"
                           IsEnabled="{Binding Path=IsBusy, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}}"
                           Hint="Crear un tipo de documento">
                        <dxmvvm:Interaction.Behaviors>
                            <dxmvvm:EventToCommand Command="{Binding Path=CreateIdentificationTypeCommand}" EventName="ItemClick"/>
                        </dxmvvm:Interaction.Behaviors>
                    </dxb:BarButtonItem>
                    <dxb:BarItemSeparator/>
                    <dxb:BarButtonItem Content="Eliminar" 
                           Glyph="{dx:DXImage 'Images/Actions/DeleteList_16x16.png'}" 
                           LargeGlyph="{dx:DXImage 'Images/Actions/DeleteList_32x32.png'}"                                             
                           Description="Eliminar"
                           Hint="Eliminar tipo de documento seleccionado"    
                           IsEnabled="{Binding Path=CanDeleteIdentificationType, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                           RibbonStyle="Large">
                        <dxmvvm:Interaction.Behaviors>
                            <dxmvvm:EventToCommand Command="{Binding Path=DeleteIdentificationTypeCommand}" EventName="ItemClick"/>
                        </dxmvvm:Interaction.Behaviors>
                    </dxb:BarButtonItem>
                    <dxb:BarItemLinkSeparator/>
                </dxr:RibbonPageGroup>
            </dxr:RibbonPage>
        </dxr:RibbonControl>

        <!--Filtros-->
        <!--Text de Busqueda-->
        <StackPanel Grid.Row="2" Orientation="Vertical">
            <TextBlock Text="¿Qué desea buscar?" VerticalAlignment="Center" Margin="0 0 0 5" FontSize="15"/>
            <dxe:TextEdit
                    x:Name="FilterSearch"
                    EditValue="{Binding Path=FilterSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    NullText="Escribe por lo menos 3 letras para iniciar la busqueda"
                    ShowNullTextForEmptyValue="True"
                    ShowNullTextIfFocused="True"
                    EditValuePostMode="Delayed"
                    CharacterCasing="Upper"
                    EditValuePostDelay="1000"
                    ToolTip="Escribe aqui para buscar"   
                    MinHeight="25"
                    VerticalContentAlignment="Center"
                    Text="{Binding FilterSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="GotFocus">
                        <i:InvokeCommandAction Command="{Binding GotFocusCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </dxe:TextEdit>
        </StackPanel>
        <!--DataGridView Fuentes Contables-->
        <busyIndicator:BusyMask x:Name="BusyIndicator"
                            IsBusy="{Binding IsBusy}"
                            IndicatorType="BouncingDot"
                            BusyContent="Please wait..."
                            BusyContentMargin="0,20,0,0"
                            IsBusyAtStartup="False"
                            Grid.Row="3">
            <dxg:GridControl
                Margin="0 8 0 0"
                EnableSmartColumnsGeneration="True"
                AutoGenerateColumns="None"
                BorderThickness="0"
                Background="Transparent"
                ItemsSource="{Binding Path=IdentificationTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                SelectedItem="{Binding Path=SelectedIdentificationType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <dxg:GridControl.View>
                    <dxg:TableView AllowCascadeUpdate="False" 
                                   EnableSelectedRowAppearance="True"
                                   ShowGroupPanel="False" AlternateRowBackground="Beige"
                                   AllowSorting="False" AllowColumnMoving="False"
                                   AllowDragDrop="False"/>
                </dxg:GridControl.View>

                <dxg:GridColumn Header="Código" 
                                Width="auto"
                                Binding="{Binding Code, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <!--Nombre-->
                <dxg:GridColumn Header="Nombre" 
                                Width="*"
                                Binding="{Binding Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>


                <!--Longitud Minima del Documento-->
                <dxg:GridColumn 
                                Width="auto"
                                Binding="{Binding MinimumDocumentLength, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <dxg:GridColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Longitud miníma"/>
                        </DataTemplate>
                    </dxg:GridColumn.HeaderTemplate>
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                    </dxg:GridColumn.EditSettings>
                </dxg:GridColumn>


                <!--Establece si el tipo de documento tiene digito de verificación-->
                <dxg:GridColumn 
                    Width="auto"
                    Binding="{Binding HasVerificationDigit, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <dxg:GridColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Digito de verificación"/>
                        </DataTemplate>
                    </dxg:GridColumn.HeaderTemplate>
                    <dxg:GridColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Row.HasVerificationDigit, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        HorizontalAlignment="Center" IsEnabled="False" Width="auto"/>
                        </DataTemplate>
                    </dxg:GridColumn.CellTemplate>
                </dxg:GridColumn>

                <dxg:GridColumn Width="30">
                    <dxg:GridColumn.CellTemplate>
                        <DataTemplate>
                        <Button
                            BorderThickness="0"
                            Padding="3"
                            Margin="3"
                            Width="auto" Height="auto" 
                            cal:Message.Attach="[Event Click] = [Action EditIdentificationTypeAsync]">
                            <Button.Content>
                                <Image Source="{dx:SvgImageSource Uri='pack://application:,,,/DevExpress.Images.v24.2;component/SvgImages/XAF/Action_Edit.svg', Size='16,16'}" Stretch="None" />
                            </Button.Content>
                        </Button>
                        </DataTemplate>
                    </dxg:GridColumn.CellTemplate>
                </dxg:GridColumn>

            </dxg:GridControl>
        </busyIndicator:BusyMask>
    </Grid>
</UserControl>
