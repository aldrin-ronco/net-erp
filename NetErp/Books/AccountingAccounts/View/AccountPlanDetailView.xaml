<UserControl x:Class="NetErp.Books.AccountingAccounts.View.AccountPlanDetailView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:h="clr-namespace:NetErp.Helpers"   
             mc:Ignorable="d" 
             xmlns:cal="http://caliburnmicro.com"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:viewmodels="clr-namespace:NetErp.Books.AccountingAccounts.ViewModel"
             xmlns:ioc="clr-namespace:NetErp.IoC"
             DataContext="{ioc:DISource Type=viewmodels:AccountPlanDetailViewModel}"
             FontFamily="Verdana" FontWeight="Light" FontSize="14"
             Name="ucAccountDetail"      
             d:DesignHeight="450">
    <UserControl.Resources>
        <h:StringToStyleConverter x:Key="StringToStyleConverter"/>
        <!--<h:BooleanToStringConverter x:Key="BooleanToStringConverter"/>-->
    </UserControl.Resources>
    
    <!--AREA DE DETALLE Y EDICION DE CUENTAS CONTABLES-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <ToolBarTray Grid.Row="0" FlowDirection="LeftToRight" ToolBarTray.IsLocked="True" Grid.ColumnSpan="3" Background="Transparent" Margin="0 10 10 10">
            <ToolBar Band="1" BandIndex="0" Background="Transparent" Loaded="ToolBar_Loaded">
                <Button Margin="2" ToolBar.OverflowMode="AsNeeded" x:Name="Cancel" Command="">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="pack://application:,,,/DevExpress.Images.v23.2;component/Images/Navigation/Backward_32x32.png" Stretch="None" Margin="2">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.5"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="Regresar" Margin="2" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button.Content>
                    <Button.ToolTip>
                        <ToolTip Content="Regresar a PUC"/>
                    </Button.ToolTip>
                </Button>
                <Separator Margin="5 0 5 0"/>
                <Button Margin="2" ToolBar.OverflowMode="AsNeeded" x:Name="Save">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="pack://application:,,,/DevExpress.Images.v23.2;component/Images/Save/Save_32x32.png" Stretch="None" Margin="2">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.5"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="Guardar" Margin="2" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button.Content>
                    <Button.ToolTip>
                        <ToolTip Content="Guardar cambios"/>
                    </Button.ToolTip>
                </Button>
            </ToolBar>
        </ToolBarTray>

        <Grid Background="Transparent" h:EnterKeyTraversal.IsEnabled="True" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="8*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <xctk:BusyIndicator Grid.Column="1" IsBusy="{Binding Path=IsBusy, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                <Grid Name="GridDetails" Grid.Column="1" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <!--Labels-->
                        <ColumnDefinition Width="auto"/>
                        <!--Cuenta-->
                        <ColumnDefinition Width="140"/>
                        <!--Nombre-->
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <!--Titulo o Encabezado-->
                    <TextBlock Grid.Row="0" Grid.Column="0" Text="DETALLES DE CUENTA CONTABLE" Grid.ColumnSpan="3" HorizontalAlignment="Center" Padding="10" FontSize="22"/>

                    <!--Clase-->
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Clase" VerticalAlignment="Center" Margin="10 5 0 5" Visibility="{Binding Path=Lv1Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Text="{Binding Path=Lv1Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Visibility="{Binding Path=Lv1Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     BorderBrush="LightGray" 
                     Grid.Row="1" Grid.Column="1" 
                     Margin="10 5 10 5" Padding="3" 
                     TextAlignment="Center" 
                     TabIndex="0"
                     IsReadOnly="True"/>

                    <TextBox Text="{Binding Path=Lv1Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Visibility="{Binding Path=Lv1Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     BorderBrush="LightGray" 
                     TabIndex="5"
                     IsReadOnly="{Binding Path=IsReadOnlyLv1Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Grid.Row="1" Grid.Column="2"
                     CharacterCasing="Upper"
                     Margin="0 5 10 5" Padding="3"/>

                    <!--Grupo-->
                    <!--Grupo.Label-->
                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Grupo" VerticalAlignment="Center" Margin="10 5 0 5" Visibility="{Binding Path=Lv2Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <!--Grupo.Code-->
                    <TextBox Text="{Binding Path=Lv2Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Visibility="{Binding Path=Lv2Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     BorderBrush="LightGray" 
                     Grid.Row="2" Grid.Column="1" 
                     Margin="10 5 10 5" Padding="3"
                     TabIndex="1"
                     TextAlignment="Center" 
                     IsReadOnly="True"/>

                    <!--Grupo.Name-->
                    <TextBox Text="{Binding Path=Lv2Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Visibility="{Binding Path=Lv2Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     BorderBrush="LightGray" 
                     TabIndex="6"
                     IsReadOnly="{Binding Path=IsReadOnlyLv2Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Grid.Row="2" Grid.Column="2"
                     CharacterCasing="Upper"
                     Margin="0 5 10 5" Padding="3"/>

                    <!--Cuenta-->
                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Cuenta" VerticalAlignment="Center" Margin="10 5 0 5" Visibility="{Binding Path=Lv3Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox Text="{Binding Path=Lv3Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Visibility="{Binding Path=Lv3Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Grid.Row="3" Grid.Column="1" 
                     Margin="10 5 10 5" Padding="3" 
                     BorderBrush="LightGray"
                     TabIndex="2"
                     TextAlignment="Center" 
                     IsReadOnly="True"/>

                    <TextBox Text="{Binding Path=Lv3Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Visibility="{Binding Path=Lv3Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Grid.Row="3" Grid.Column="2"
                     TabIndex="7"
                     IsReadOnly="{Binding Path=IsReadOnlyLv3Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Margin="0 5 10 5" Padding="3"
                     CharacterCasing="Upper"
                     BorderBrush="LightGray"/>

                    <!--SubCuenta-->
                    <TextBlock Grid.Row="4" Grid.Column="0" Text="Sub Cuenta" VerticalAlignment="Center" Margin="10 5 0 5" Visibility="{Binding Path=Lv4Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox Text="{Binding Path=Lv4Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Visibility="{Binding Path=Lv4Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Grid.Row="4" Grid.Column="1" 
                     Margin="10 5 10 5" Padding="3" 
                     BorderBrush="LightGray" 
                     TabIndex="3"
                     TextAlignment="Center" 
                     IsReadOnly="True"/>

                    <TextBox Text="{Binding Path=Lv4Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Visibility="{Binding Path=Lv4Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Grid.Row="4" Grid.Column="2"
                     TabIndex="8"
                     IsReadOnly="{Binding Path=IsReadOnlyLv4Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"                     
                     Margin="0 5 10 5" Padding="3"
                     CharacterCasing="Upper"
                     BorderBrush="LightGray"/>

                    <!--Auxiliar-->
                    <TextBlock Grid.Row="5" Grid.Column="0" Text="Auxiliar" VerticalAlignment="Center" Margin="10 5 0 5" Visibility="{Binding Path=Lv5Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <!--h:FocusHelper.IsFocused="{Binding Path=IsFocusedLv5Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->
                    <!--BindableSelectionStart="{Binding Path=SelectionStart, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     BindableSelectionLength="{Binding Path=SelectionLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->

                    <!--Allow textbox content selection from viewModel-->
                    <h:SelectionBindingTextBox
                     x:Name="Lv5Code"
                     Text="{Binding Path=Lv5Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Visibility="{Binding Path=Lv5Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     IsReadOnly="{Binding Path=IsReadOnlyLv5Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Grid.Row="5" Grid.Column="1"
                     TabIndex="4"
                     MaxLength="8"
                     Margin="10 5 10 5" Padding="3" 
                     BorderBrush="LightGray" 
                     TextAlignment="Center">
                        <TextBoxBase.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Style.Triggers>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="Background" Value="Beige"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBoxBase.Style>
                        <!--<i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding PopulateInfoCommand}" CommandParameter="{Binding Path=Lv5Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </i:EventTrigger> 
                </i:Interaction.Triggers>-->
                    </h:SelectionBindingTextBox>

                    <!--cal:Message.Attach="[Event TextChanged] = [Action PopulateInfo(AccountCode.Text)]"-->
                    <!--h:FocusHelper.IsFocused="{Binding Path=IsFocusedLv5Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->

                    <TextBox Text="{Binding Path=Lv5Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Visibility="{Binding Path=Lv5Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Grid.Row="5" Grid.Column="2" 
                     Margin="0 5 10 5" Padding="3"
                     TabIndex="9"
                     Style="{Binding Path=Lv5NameStyle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToStyleConverter}}"
                     IsReadOnly="{Binding Path=IsReadOnlyLv5Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     CharacterCasing="Upper"
                     BorderBrush="LightGray">
                    </TextBox>

                    <!--<TextBlock Text="{Binding SelectionStart, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToStringConverter}}" Background="Yellow"/>-->

                    <!--Style="{Binding Path=Lv5Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToStyleConverter}}"-->

                    <!--Background="{Binding Path=Lv5NameBackgroundColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Foreground="{Binding Path=Lv5NameForegroundColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->

                    <!--Como usar RelativeResource para Bindear con una propiedad de un ansestro-->
                    <!--<TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}, Path=accountCode}"/>-->
                    <!--<TextBlock Text="{Binding Path=Lv5Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->

                    <!--Naturaleza-->
                    <TextBlock Grid.Row="6" Grid.Column="0" Text="Naturaleza" VerticalAlignment="Center" Margin="10 5 0 5"/>
                    <ComboBox ItemsSource="{Binding Path=AccountNature, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      DisplayMemberPath="Value"
                      SelectedValuePath="Key"
                      SelectedValue="{Binding SelectedAccountNature, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Grid.Row="6" Grid.Column="1"
                      IsEnabled="False"
                      IsTabStop="False"
                      Margin="10 5 10 5" Padding="3" 
                      Grid.ColumnSpan="3"/>

                    <!--Acciones--><!--
                    <Grid Name="GridActions" Grid.Row="7" Grid.Column="2" ColumnSpan="1" Margin="0 20 0 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="55"/>
                        </Grid.RowDefinitions>
                        <Button x:Name="Save" Content="Guardar" Grid.Column="0" Margin="0 5 0 10" TabIndex="10"/>
                        <Button x:Name="Cancel" Content="Cancelar" Grid.Column="2" Margin="0 5 10 10" TabIndex="11"/>
                    </Grid>-->
                </Grid>
            </xctk:BusyIndicator>

        </Grid>
    </Grid>

    <!--fin GridDetails-->
</UserControl>
